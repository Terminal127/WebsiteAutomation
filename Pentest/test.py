import os
import subprocess
import time
import threading

# Define the frames for the animated banner
frames = [
    "Welcome to Gobuster Fuzzing Tool!",
    "----------------------------------",
    "Choose an option to start:",
    "DNS   - Perform DNS fuzzing",
    "VHOST - Perform VHOST fuzzing",
    "DIR   - Perform directory fuzzing",
    "QUIT  - Quit the program"
]

# Define the hacker face ASCII art
hacker_face = [
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠛⠉⠉⠛⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿ \t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⣠⣶⠆⠀⠀⠀⠀⠹⣧⡈⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣵⠃⣼⢟⣿⣀⣰⡆⠀⠀⣄⢻⣷⣦⡐⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣼⣿⣾⣿⣿⣿⣧⣤⣷⣿⢸⣿⣷⣻⣌⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡈⢿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢳⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠘⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢹⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⡿⠟⠋⠛⠉⠀⠁⠛⠛⠛⢫⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⡿⢈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⠻⠿⠟⣻⣥⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣀⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣷⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣮⣍⠉⠀⢹⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⣤⣤⣤⣤⠶⠂⠀⢠⣾⣿⣿⣿⣿⣿⣯⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣦⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣀⠀⠀⠺⠇⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣏⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⣠⣌⠹⠃⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⡜⠟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⢍⣴⣌⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣻⣿⣷⣬⣻⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣵⣾⢦⣈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠀⠀⢭⡉⠉⠉⣿⣿⣧⡘⣿⣿⣿⠿⠛⢿⢏⣾⢻⣿⡆⣿⣷⣮⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⢸⣿⣿⣸⡄⠀⢸⣿⣿⣿⣿⣿⣿⣇⠀⠀⠘⠣⢠⣿⣿⣿⣷⣾⣿⡏⠀⢸⣿⠟⢸⣼⠹⣷⢽⣿⣿⣿⣶⣝⢿⣿⣿⣿⣿⣿⡿⠃⣸⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡹⣿⣿⣿⣿⣫⣿⣿⣿⣿⣷⣿⢻⣿⢿⣷⠀⢀⣿⣿⣿⣿⣿⠁⠈⠹⢦⣀⠀⢸⣿⣿⣿⣿⣿⣿⣇⣴⣿⠏⠀⣸⣿⢦⣻⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡝⢿⣿⣿⣿⣿⣿⣿⣿⣟⣿⢸⣿⠈⢿⣧⣸⣿⣿⣿⣿⣿⣧⠀⠀⠀⠈⠛⠿⠋⠋⠹⣿⣿⣿⢉⠟⠋⠀⠀⣿⣿⣸⣿⡇⢿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠂⠻⣿⣿⣿⣿⣿⣿⣧⡇⠈⣿⡇⠈⠹⡄⠻⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣧⡀⠀⠀⠀⠻⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⠟⠁⣴⢿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠈⠻⣿⣿⣿⣿⣾⠁⠀⠉⠁⠀⠀⠻⡄⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠀⠀⠀⠀⣀⣻⣿⣿⣷⡄⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⡿⠁⣠⣾⣿⣿⡝⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟\t"
"⣿⣿⢿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣷⣄⠈⠻⢿⣿⠁⠀⠀⠀⠀⠀⠀⠀⣷⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⡄⠁⠀⠀⠀⠈⠻⣿⣿⣿⠿⠋⣠⣾⣿⣿⣿⣿⣿⡞⣿⣿⣿⣿⣿⣿⡟⢿⣿⣿⣿\t"
"⣿⠇⣱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⡏⠛⣷⣦⡈⠻⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠹⡟⢁⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢿⣌⠙⢿⣿⣷⡝⠻⣿\t"
"⢨⣿⠟⣡⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢀⣾⣿⣿⣿⣿⡄⠀⠀⠠⡘⢦⠀⠘⢽⣿⣟⣭⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀⠀⠀⠀⣸⢿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⣿⣿⣯⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠈⠻⣿⣆⠈⢻⣟⢦⡀\t"
"⡈⢁⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⣸⣿⣿⣿⡿⣽⡇⠀⠀⡡⣷⡈⢧⡀⠈⣿⣷⣿⣿⣿⣿⣿⡏⠀⠀⠀⠀⡀⠀⢠⣟⣟⢸⣿⣿⣿⣷⠀⠀⠐⡀⠀⢠⣿⣿⣿⣶⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠹⣿⣷⡄⠙⠃⠁\t"
"⢁⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⡇⠀⢠⣿⣿⣿⡿⡽⠻⡇⠀⠀⢧⠹⣧⣸⣽⣷⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣤⣼⡴⡁⣸⣽⣷⢸⣿⣿⣿⣿⡄⢀⣄⠀⡄⣾⣿⣿⣿⣷⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⠈⢿⣿⣆⠀⠈\t"
"⣾⣿⣿⣿⣿⣿⣿⣿⣿⡿⣇⣿⢿⣇⢠⣿⣿⣿⣿⡿⠃⠀⡇⠀⠀⠘⡇⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣧⣿⣿⣿⣿⣿⣿⣿⣿⣇⢸⣿⠘⢹⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⢿⣿⣿⣄⠀⠹⣿⡧⠀\t"
"⣿⣿⣿⣿⣿⣿⣿⣿⠏⠘⡇⡟⠉⣿⣾⣿⣿⣿⣿⠃⠀⠀⡇⠀⠀⢤⢻⠘⣟⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⡿⣾⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣻⣿⣿⣇⠀⠀⠀⠀\t"
"⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⣧⣃⣀⣿⣿⣿⣿⢯⠏⠀⠀⠀⡇⠀⠰⡈⣿⢧⣸⡆⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⣿⣿⣿⣧⢸⣿⣿⣿⣿⣿⣿⣿⡟⠙⣿⣿⣿⣿⡿⣿⣿⣆⠀⠀⠀\t"
"⣿⣿⣿⣿⣿⡟⠁⠀⠀⠀⠈⠉⣽⣿⣿⣿⣿⠏⠀⠀⠀⠀⣇⠀⠀⢷⢸⣾⣯⠻⣿⣿⣿⡿⠷⣿⣿⣿⣿⣿⣿⡿⢿⣿⡿⠿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⢲⣿⠛⠸⣿⣧⣿⣿⣿⣿⣿⡟⠻⠇⠀⠹⣿⣿⣿⣿⡌⢿⣿⣷⡀⠀\t"
"⣿⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⣿⠀⣀⢼⣧⠿⣿⣷⣻⡟⣿⣧⡀⣿⣿⣿⣿⣿⡿⠀⠸⣿⡿⠿⠀⢹⣿⣿⣿⣿⣿⣿⣿⣇⣾⣿⠀⠀⠉⢻⣿⣿⣿⣿⣿⡇⠠⣀⢶⣀⠹⣿⣿⣿⣿⣎⢿⣿⣷⡄\t"
"⣿⣿⣿⠋⠀⠀⠀⠀⡠⠀⢰⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⡏⠀⢳⠈⠻⢤⠉⢯⣿⣿⠸⡿⣿⣿⣿⣿⣿⡟⠛⠀⢰⣿⠁⠐⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇⣾⠃⠀⠀⠀⢻⣿⣿⣿⣿⣷⠀⠀⠀⣿⣧⡙⢿⣿⣿⣿⡎⢻⣿⣿\t"
"⣿⡿⠁⠀⠀⠀⠀⠸⠁⢀⣾⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⡇⠀⠸⣷⡀⠈⣷⣾⣿⣿⣧⣿⢠⡏⠙⠿⢿⠇⠀⠀⢸⠃⠀⠀⠀⠀⢽⣿⣿⣿⣿⣿⣿⣿⣇⣿⡆⠀⠀⠀⠈⣿⣿⣿⣿⣿⠂⠀⠀⠈⣿⣿⣎⢿⣿⢿⣿⣄⠙⠿\t"
"⡿⠁⠀⠀⠀⠀⢀⠀⣀⣼⣿⣳⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡏⠳⣴⣿⡿⠋⡿⣿⣿⡟⠀⠀⣠⡋⠀⠀⢀⡇⠀⠀⡀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣸⡿⣇⠀⠀⠀⠀⠀⠀⠀⠀⣻⡆⠀⠀⠀⠈⢿⣿⣶⣿⣧⡻⣿⣧⡀\t"
]

def display_animated_banner():
    os.system('clear')
    
    # Calculate the duration of the animation (8 seconds)
    animation_duration = 8
    frame_duration = 0.5  # Time in seconds for each frame

    # Calculate the number of frames and frames for hacker face
    num_frames = len(frames)
    num_hacker_frames = len(hacker_face)

    start_time = time.time()

    while time.time() - start_time < animation_duration:
        os.system('clear')
        current_frame = frames[int((time.time() - start_time) / frame_duration) % num_frames]

        print(current_frame)

        # Display the hacker face for 5 seconds
        if time.time() - start_time < 5:
            for line in hacker_face:
                print(line)

        time.sleep(0.1)  # Adjust the sleep duration for smooth animation

def run_gobuster_dns():
    subprocess.run(["python", "gobusterDNS.py"], check=True)

def run_gobuster_vhost():
    subprocess.run(["python", "gobusterVHOST.py"], check=True)

def run_gobuster_dir():
    subprocess.run(["python", "gobusterDIR.py"], check=True)

def main_menu():
    while True:
        choice = input("Choose an option (DNS/VHOST/DIR/QUIT): ").strip().lower()

        if choice == 'dns':
            run_gobuster_dns()
        elif choice == 'vhost':
            run_gobuster_vhost()
        elif choice == 'dir':
            run_gobuster_dir()
        elif choice == 'quit':
            break
        else:
            print("Invalid choice. Please choose DNS, VHOST, DIR, or QUIT.")

if __name__ == "__main__":
    banner_thread = threading.Thread(target=display_animated_banner)
    banner_thread.start()

    # Wait for the banner animation to complete (8 seconds)
    time.sleep(8)

    # Clear the terminal and start the main menu
    os.system('clear')
    main_menu()

